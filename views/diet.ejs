<%- include('partials/header.ejs') -%>

    <div class="container">
        <ul class="collection with-header">
            <li class="collection-header">
                <%- title1 %>
            </li>
            <% list1.forEach(function(item,index){ %>
                <li class="collection-item">
                    <div class="item-wrapper">
                        <%= item %>        
                    </div>
                    <div class="switch secondary-content">
                        <label>
                            <input class="dietSwitch" type="checkbox" value="<%=item%>"
                                onchange="updateUserDiet(this.value.toLowerCase())">
                            <span class="lever"></span>
                        </label>
                    </div>
                </li>
            <% }) %>
        </ul>
        <ul class="collection with-header">
            <li class="collection-header">
                <%- title2 %>
            </li>
            <% list2.forEach(function(item,index){ %>
                <li class="collection-item" id="<%=item%>">
                    <div class="item-wrapper">
                        <span class="title"><%= item %></span>
                        <span class="line-below"></span>   
                    </div>
                    <div class="secondary-content d-flex">
                        <i class="material-icons i-secondary" onclick="routeEditButton('<%=item%>')">edit</i>
                        <div class="switch">
                            <label>
                                <input class="customDietSwitch" type="checkbox" value="<%=item%>"
                                    onchange="updateUserDiet(this.value.toLowerCase())">
                                <span class="lever"></span>
                            </label>
                        </div>
                    </div>
                </li>
            <% }) %>
        </ul>
    </div>

    <script>
        window.onload = updateFilterView();

        // route edit buttons @ allergies, additives
        async function routeEditButton(item){
            switch(item.toLowerCase()){
                case 'allergene':
                    document.location = '../allergies';
                    break;
                case 'zusatzstoffe':
                    document.location = '../additives';
                    break;
            };
        };

        // look up indb, update switches and collection items
        async function updateFilterView(){
            const userDiet = await getUserDiet();
            const allergs = await getUserAllergies();
            const adds = await getUserAdditives();
            updateDietSwitches(userDiet);
            updateCustomDietSwitches(allergs, adds);
            populateCustomDiets(allergs, adds)
        };

        //populate user allergies and additives
        function populateCustomDiets(allergs, adds){
            let allergSpan= document.getElementById("Allergene").querySelector('.line-below');
            allergSpan.innerText = allergs.join(', ');
            let addSpan= document.getElementById("Zusatzstoffe").querySelector('.line-below');
            addSpan.innerText = adds.join(', ');
        };


        //set diet filter switches
        function updateDietSwitches(userDiet) {
            let switches = document.querySelectorAll('.dietSwitch');
            switches.forEach(item => {
                if (userDiet.includes(item.value.toLowerCase())) {
                    item.checked = true;
                };
            })
        };

        // set custom diet filter switches
        function updateCustomDietSwitches(allergs, adds){
            let switches = document.querySelectorAll('.customDietSwitch');
            switches.forEach(item => {
                disableCustomDietSwitches(item, allergs, adds)
            })
        };


        //disable custom switches if no values
        function disableCustomDietSwitches(item, allergs, adds){
            switch (item.value.toLowerCase()){
                case 'allergene':                            
                    if(!allergs.length){
                        item.checked = false;
                        item.disabled = true;   
                    };
                    break;
                case 'zusatzstoffe':                 
                    if(!adds.length){
                        item.checked = false;
                        item.disabled = true;   
                    };
                    break;     
            };
        }


        //get user additives from indb
        async function getUserAdditives() {
            const pref = await getUserPreferences();
            return pref.userAdditives;
        };


        //get user allergies from indb
        async function getUserAllergies() {
            const pref = await getUserPreferences();
            return pref.userAllergies;
        };

        // add/remove diet entries to/from indb column "userDiet"
        async function updateUserDiet(diet) {
            const oldDiet = await getUserDiet();
            let newDiet = [];
            if (!oldDiet.length || !oldDiet.includes(diet)) {
                oldDiet.push(diet);
                newDiet = [...oldDiet];
            } else {
                newDiet = oldDiet.filter(item => item !== diet);
            };
            db.transaction("rw", db.userStore, async() => {
                await db.userStore.orderBy('id').modify({
                    "userDiet": newDiet.sort()
                });
            }).catch(Dexie.ModifyError, error => {
                console.error(`${error.failures.length} items failed to modify`);
            }).catch(error => {
                console.error(`Generic Error ${error}`);
            });
        };


        // get user Diet entries from indb
        async function getUserDiet(){
            const pref = await getUserPreferences();
            return pref.userDiet;
        };


        //get User Preferences from Indb
        async function getUserPreferences() {
            await db.open();
            const pref = await db.userStore.toArray();
            return pref[0];
        };

    </script>
    <%- include('partials/footer.ejs') -%>