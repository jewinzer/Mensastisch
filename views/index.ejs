<%- include('partials/header.ejs') -%>
<div class="container hero-section bg-light">
    <div class ="row">
        <div class ="col s9">
            <%- heroContentPrimary %>
        </div>
        <div class="col s3 center-align" id="heroSecondary">
            <%- heroContentSecondary %>
        </div>
    </div>
</div>
<div class= "container">
    <div class="row">
        <div class ="col s12">
            <div class="btn-group">
                <button class="btn" onclick="refreshDateBtn(this.nextElementSibling.innerHTML, false)"><i class="material-icons">chevron_left</i></button>
                <button class ="btn" id="dateBtn"></button>
                <button class="btn" onclick="refreshDateBtn(this.previousElementSibling.innerHTML, true)"><i class="material-icons">chevron_right</i></button>
            </div>
        </div>
    </div>
    <div class ="row" id="mainContent">
        <%- mainContent %>
    </div>
</div>


<script>
window.onload = <%= onload %>;
//
//1. Mensa-Daten (indb)
//2. Daten zu Ã–ffnungzeiten (indb / api)
//3. Daten zu Gerichten (indb / api)

//add menu to DOM
async function showMenu(date, id){
    let main = document.getElementById('mainContent');
    main.innerHTML= '';
    const menu = await getMenu(date, id);
    console.log(menu);
    if (menu.length) {
        const categories = getMenuCategories(menu);
        console.log(categories);
        categories.forEach(category =>{
            console.log(category);
            let menuCategory = menu.filter(meal => meal.category == category);
            console.log(menuCategory);
            if (menuCategory.length){
                let resultList = document.createElement('ul');
                resultList.setAttribute('class','collection with-header');
                let title = document.createElement('li');
                title.setAttribute('class', 'collection-header');
                title.innerText = category;
                resultList.appendChild(title);
                menuCategory.forEach(meal =>{
                    let entry = document.createElement('li');
                    entry.setAttribute('class', 'collection-item');
                    let icon = document.createElement('i');
                    icon.setAttribute('class', 'material-icons');
                    icon.innerHTML= 'play_arrow';
                    let a = document.createElement('a');
                    //a.href = `../?canteenId=${result.id}`;
                    a.setAttribute('class', 'secondary-content');
                    let div = document.createElement('div');
                    let name = document.createElement('span');
                    name.setAttribute('class', 'title');
                    name.innerText= meal.name;
                    let prices = document.createElement('span');
                    prices.setAttribute('class', 'line-below');
                    //prices.innerHTML= meal.address;
                    div.appendChild(name);
                    div.appendChild(prices);
                    a.appendChild(icon);
                    entry.appendChild(div);
                    entry.appendChild(a);
                    resultList.appendChild(entry);           
                })
                main.appendChild(resultList);
            };
        })
    } else {
        main.innerHTML='No Menu available. Please pick another date.';
    };  
};

//get Categories from a menu
function getMenuCategories(menu){
    let categories = [];
    menu.forEach(meal =>{
        categories.push(meal.category);
    })
    return new Set(categories);
};

//get Menu by id, date
async function getMenu(date, id){
    const url = `https://openmensa.org/api/v2/canteens/${id}/days/${date}/meals`;
    const response = await fetch(url);
    const menu = await response.json();
    return menu;
};


//populate date field
function populateDateBtn(date, id){
    document.getElementById('dateBtn').innerHTML = date.toLocaleDateString("ru-RU");
    isBusinessDay(date,id);
    showMenu(date,id);
};


//adds business day data to DOM
async function isBusinessDay(date, id){
    const opDays = await getDatesById(id);
    const opDay = opDays.find(element => element.date == date.toLocaleDateString("en-CA"));
    let opImg = document.getElementById('opImg');
    let opMsg = document.getElementById('opMsg');
    if (opDay === undefined){
        opImg.innerText='';
        opMsg.innerText='';
    } else if (opDay.closed){
        opImg.innerText='sentiment_very_dissatisfied';
        opMsg.innerText='CLOSED';
    } else {
        opImg.innerText='sentiment_very_satisfied';
        opMsg.innerText='OPEN';
    }
};


//refresh date field
function refreshDateBtn(datestring, add){
    const parts = datestring.split('.');
    const oldDate = new Date(parts[2], parts[1], parts[0]);
    const newDate = new Date();
    if(add){
        newDate.setDate(oldDate.getDate() + 1);
    } else {
        newDate.setDate(oldDate.getDate() - 1);
    }
    populateDateBtn(newDate, getIdFromUrl());
};


//return canteen id from Url search parameters
function getIdFromUrl(){
    const params = new URLSearchParams(window.location.search);
    return params.get("canteenId");
};


//show canteen Data by Id
async function showCanteenData(id){
    const canteen = await getCanteenById(id);
    let hero = document.querySelector('.col');
    let name = document.createElement('h4');
    name.innerText = canteen.name;
    let address = document.createElement('h5');
    address.innerText = canteen.address;
    hero.appendChild(name);
    hero.appendChild(address);
    populateDateBtn(new Date(), id);
};


//get canteen from indb by Id
async function getCanteenById(id) {
    const canteen = await db.canteensStore.where('id').equals(id).toArray();
    return canteen[0];
};


//get canteen's opening dates by canteen id
async function getDatesById(id) {
    const url = `https://openmensa.org/api/v2/canteens/${id}/days`;
    const response = await fetch(url);
    const dates = await response.json();
    return dates;
};

</script>
<%- include('partials/footer.ejs') -%>